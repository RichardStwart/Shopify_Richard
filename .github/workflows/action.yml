name: Medusa Pipeline
on: [pull_request] # allow this workflow to be called from other workflows

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: "14"
          cache: "yarn"

      - name: Assert changed
        run: ./scripts/assert-changed-files-actions.sh "packages"

      - name: Bootstrap packages
        uses: ./.github/actions/cache-bootstrap
        with:
          extension: unit-tests

      - name: Build Packages
        run: yarn build

      - name: Run unit tests
        run: yarn test

  integration-tests-api:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: "14"
          cache: "yarn"

      - name: Bootstrap packages
        uses: ./.github/actions/cache-bootstrap
        with:
          extension: integration-tests

      - name: Build Packages
        run: lerna run build

      - name: Install dev cli
        run: sudo npm i -g medusa-dev-cli

      - name: Set path to medusa repo
        run: medusa-dev --set-path-to-repo `pwd`

      - name: Force install API
        run: medusa-dev --force-install
        working-directory: integration-tests/api

      - name: Build integration tests
        run: yarn build
        working-directory: integration-tests/api

      - name: Run API integration tests
        run: yarn test:integration:api --maxWorkers=50% --silent=false
        env:
          DB_PASSWORD: postgres

  integration-tests-plugins:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: "14"
          cache: "yarn"

      - name: Bootstrap packages
        uses: ./.github/actions/cache-bootstrap
        with:
          extension: integration-tests

      - name: Build Packages
        run: lerna run build

      - name: Install dev cli
        run: sudo npm i -g medusa-dev-cli

      - name: Set path to medusa repo
        run: medusa-dev --set-path-to-repo `pwd`

      - name: Force install
        run: medusa-dev --force-install
        working-directory: integration-tests/plugins

      - name: Build plugin integration tests
        run: yarn build
        working-directory: integration-tests/plugins

      - name: Run plugin integration tests
        run: yarn test:integration:plugins --maxWorkers=50% --silent=false
        env:
          DB_PASSWORD: postgres
  publish-canary:
    needs: [unit-tests, integration-tests-api, integration-tests-plugins]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: "14"
          cache: "yarn"
          registry-url: 'https://registry.npmjs.org'
      - name: "Get Branch Name"
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
      - name: Format Version Name
        run: |
          VERSION_NAME=`echo ${{ env.BRANCH_NAME }} | sed "s/[/_]/-/g"`
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV 
      - name: Authenticate with NPM
        run: |
          echo "@oliverjuhl:registry=http://registry.npmjs.org/" > .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish Canary
        run: lerna publish --yes --canary --preid ${{ env.VERSION_NAME }} --dist-tag ${{ env.VERSION_NAME }} --force-publish="*"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
