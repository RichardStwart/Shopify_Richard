delete:
  operationId: DeleteUsersUser
  summary: Delete a User
  description: Deletes a User
  x-authenticated: true
  parameters:
    - in: path
      name: id
      required: true
      description: The ID of the User.
      schema:
        type: string
  x-codeSamples:
    - lang: JavaScript
      label: JS Client
      source:
        $ref: ../code_samples/JavaScript/users_{id}/deleteundefined
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/users_{id}/deleteundefined
  tags:
    - Users
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
                description: The ID of the deleted user.
              object:
                type: string
                description: The type of the object that was deleted.
                default: user
              deleted:
                type: boolean
                description: Whether or not the items were deleted.
                default: true
get:
  operationId: GetUsersUser
  summary: Retrieve a User
  description: Retrieves a User.
  x-authenticated: true
  parameters:
    - in: path
      name: id
      required: true
      description: The ID of the User.
      schema:
        type: string
  x-codeSamples:
    - lang: JavaScript
      label: JS Client
      source:
        $ref: ../code_samples/JavaScript/users_{id}/getundefined
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/users_{id}/getundefined
  tags:
    - User
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            properties:
              user:
                $ref: ../components/schemas/user.yaml
post:
  operationId: PostUsersUser
  summary: Update a User
  description: Updates a User
  parameters:
    - in: path
      name: id
      required: true
      description: The ID of the User.
      schema:
        type: string
  x-authenticated: true
  requestBody:
    content:
      application/json:
        schema:
          properties:
            first_name:
              description: The name of the User.
              type: string
            last_name:
              description: The name of the User.
              type: string
            role:
              description: Userrole assigned to the user.
              type: string
              enum:
                - admin
                - member
                - developer
            api_token:
              description: The api token of the User.
              type: string
            metadata:
              description: An optional set of key-value pairs with additional information.
              type: object
  x-codeSamples:
    - lang: JavaScript
      label: JS Client
      source:
        $ref: ../code_samples/JavaScript/users_{id}/postundefined
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/users_{id}/postundefined
  tags:
    - User
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            properties:
              user:
                $ref: ../components/schemas/user.yaml
